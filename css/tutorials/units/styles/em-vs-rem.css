.one-em {
    font-size: 1em;
}

.one-rem {
    font-size: 1rem;
}

.two-em {
    font-size: 2em;
}

.two-rem {
    font-size: 2rem;
}

.two-hundred-percent {
    font-size: 200%;
}


.icon-container.large {
    font-size: 30px;
}

.em-icon {
    width: 1em;
    height: 1em;
}

.rem-icon {
    width: 1rem;
    height: 1rem;
}

.parent {
    font-size: 30px;
}

/*
    Notes:
     - Both `em` and `rem` are relative to the font-size that you have defined.

     - The "r" in `rem` stands for root, meaning that it is relative to our root font-size.

     - `em` is relative to the parent font-size, not the root font-size. 

     - What 1rem and 1em means is that they are 100% the root font-size and 100% the parent
       font-size. If we scale these up to 2rem and 2em, this is now 200% of either value.

     - Essentially, an 1rem is going to have the same font-size no matter where it is defined
       within the document; however, 1em changes depending on its parent.

     - By using `em` with shapes, as we scale up the font-size, so does the size of the box.

     - Ultimately, `em` is great since it provides scaling capabilities and `rem` is useful for 
       when you want to set a font to the base size, even if you are unsure of what that is.
*/